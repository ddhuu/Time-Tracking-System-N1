services:
  
  postgres_database_for_project_service: 
    image: postgres:16-alpine
    container_name: postgres_db_for_project_service
    restart: unless-stopped
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=project
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - project_network

  postgres_database_for_timesheet_service: 
    image: postgres:16-alpine
    container_name: postgres_db_for_timesheet_service
    restart: unless-stopped
    ports:
      - 5434:5432
    environment:
      - POSTGRES_DB=timesheet
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - project_network

  # project_service_application: 
  #   depends_on:
  #     - postgres_database_for_project_service
  #   container_name: project_service_application
  #   restart: unless-stopped
  #   env_file: ./project-service/.env 
  #   build:
  #     context: ./project-service
  #     dockerfile: Dockerfile
  #   ports:
  #   - 3333:3333  
  #   networks:
  #     - project_network

  # timesheet_service_application: 
  #   depends_on:
  #     - postgres_database_for_timesheet_service 
  #   container_name: timesheet_service_application
  #   restart: unless-stopped
  #   env_file: ./timesheet-service/.env 
  #   build:
  #     context: ./timesheet-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - 3334:3334
  #   networks:
  #     - project_network

networks:
  project_network:
    driver: bridge 
