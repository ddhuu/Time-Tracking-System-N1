import { HttpService } from '@nestjs/axios';
import { ConfigService } from '@nestjs/config';
import { WeeklyOneUserReportResponseType, WeeklyAllUsersReportResponseType, ProjectOverviewResponse } from '../../type_schema/report';
import { PaginationResponse } from '../../libs/response/pagination';
export declare class ReportService {
    private readonly httpService;
    private readonly configService;
    private readonly timesheetServiceUrl;
    private readonly projectServiceUrl;
    private readonly logger;
    constructor(httpService: HttpService, configService: ConfigService);
    getWeeklyOneUserReport(userId: string, fromDate: string, toDate: string, authHeader?: string): Promise<WeeklyOneUserReportResponseType>;
    getWeeklyAllUsersReport(fromDate: string, toDate: string, authHeader?: string): Promise<PaginationResponse<WeeklyAllUsersReportResponseType>>;
    getProjectOverviewReport(customerId?: number, authHeader?: string): Promise<ProjectOverviewResponse>;
    private getUserInfo;
    private getAllUsers;
    private getTimesheetEntries;
    private getAllTimesheetEntries;
    private getTasksInfo;
    private getProjects;
    private getCustomers;
    private getTimesheetsByProjects;
    private processWeeklyUserReportEntries;
    private processWeeklyAllUsersReportEntries;
    private createDurationArray;
    private formatDuration;
    private formatTotalDuration;
    private calculateTotalDuration;
    private calculateCurrentMonthDuration;
    private calculateNotExportedDuration;
    private calculateNotBilledDuration;
    private getLastEntryDate;
    private groupTimesheetEntriesByUser;
    private getHeaders;
    private generateMockWeeklyUserReport;
    private generateMockWeeklyAllUsersReport;
    getDashboardData(userId?: string, authHeader?: string): Promise<any>;
    private generateMockProjectOverviewReport;
}
